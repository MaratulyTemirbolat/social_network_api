# Generated by Django 4.0.4 on 2022-05-22 17:28

import auths.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='время создания')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='время обновления')),
                ('datetime_deleted', models.DateTimeField(blank=True, null=True, verbose_name='время удаления')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[auths.models.email_lower_case_validation], verbose_name='Почта/Логин')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активность')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Статус менеджера')),
                ('last_seen', models.DateTimeField(auto_now=True, verbose_name='Последний вход')),
                ('is_online', models.BooleanField(default=True, verbose_name='Онлайн')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='Никнейм')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Url')),
                ('birthday', models.DateField(validators=[auths.models.adult_validation], verbose_name='Дата рождения')),
                ('blocked_users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='Заблокированные пользователи')),
                ('friends', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='Друзья')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ('datetime_created',),
            },
        ),
    ]
